# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, improvements ]
    paths-ignore:
    - '**/README.md'
    - '**/LICENSE'
    - 'visuals/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**/README.md'
    - '**/LICENSE'
    - 'visuals/**'

  schedule:
  - cron:  '0 3 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AZCOPY_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AZURE_DEFAULTS_LOCATION: westeurope


name: ci

jobs:
  syncTest:
    name: Create storage, sync & destroy
    defaults:
      run:
        working-directory: scripts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source
      uses: actions/checkout@v2

    # ubuntu Az CLI installation 
    - name: Install CLI-beta
      run: |
        cd ../..
        CWD="$(pwd)"
        python3 -m venv oidc-venv
        . oidc-venv/bin/activate
        echo "activated environment" 
        python3 -m pip install --upgrade pip
        echo "started installing cli beta" 
        pip install -q --extra-index-url https://azcliprod.blob.core.windows.net/beta/simple/ azure-cli
        echo "installed cli beta"    
        echo "$CWD/oidc-venv/bin" >> $GITHUB_PATH   
    - name: Use Azure CLI
      uses: azure/login@v1.4.0
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - name: Create Storage Account
      run: | 
        ./create_storage_account.ps1 -Container artifacts `
                                     -Name "filesyncci${env:GITHUB_RUN_ID}" `
                                     -ResourceGroup "file-sync-ci-rg${env:GITHUB_RUN_ID}" `
                                     -SubscriptionId ${{ secrets.ARM_SUBSCRIPTION_ID }} `
                                     -Verbose
      shell: pwsh

    # - name: Clean Up
    #   if: ${{ always() }}
    #   run: |
    #     $ErrorActionPreference = "Continue"
    #     Set-Location (Join-Path $env:GITHUB_WORKSPACE terraform) # Task does not support 'working-directory' property

    #     # Remove resource locks first
    #     $resourceLocksJSON = $(terraform output -json resource_locks 2>$null)
    #     if ($resourceLocksJSON -and ($resourceLocksJSON -match "^\[.*\]$")) {
    #       $resourceLocks = ($resourceLocksJSON | ConvertFrom-JSON)
    #       az resource lock delete --ids $resourceLocks --verbose
    #     }

    #     # Build JMESPath expression
    #     $repository = ($env:GITHUB_REPOSITORY).Split("/")[-1]
    #     $tagQuery = "[?tags.repository == '${repository}' && tags.workspace == '${env:TF_WORKSPACE}' && tags.runid == '${env:GITHUB_RUN_ID}' && properties.provisioningState != 'Deleting'].id"

    #     Write-Host "Removing resource group identified by `"$tagQuery`"..."
    #     $resourceGroupIDs = $(az group list --query "$tagQuery" -o tsv)
    #     if ($resourceGroupIDs) {
    #       Write-Host "az resource delete --ids ${resourceGroupIDs}..."
    #       az resource delete --ids $resourceGroupIDs --verbose
    #     } else {
    #       Write-Host "Nothing to remove"
    #     }
    #   shell: pwsh